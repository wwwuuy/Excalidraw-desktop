export function parseJSON(json: string) {
    try {
        return JSON.parse(json)
    } catch (error) {
        k.logger.error('parseJSON', error.toString?.())
        return null
    }
}

export class CustomError extends Error {
    constructor(public errorCode: number, message: string) {
        super(message)
        this.name = 'CustomError'
    }
}

export function getRandomString(length: number) {
    const charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
    let randomString = ''

    for (let i = 0; i < length; i++) {
        const randomIndex = Math.floor(Math.random() * charset.length)
        randomString += charset.charAt(randomIndex)
    }

    return randomString
}

export function deepClone<T>(obj: T): T {
    return JSON.parse(JSON.stringify(obj))
}