{
  "openapi": "3.0.1",
  "info": {
    "title": "Kooboo.ApiMarket.Web",
    "version": "1.0"
  },
  "paths": {
    "/service/Audio/Tts": {
      "post": {
        "tags": [
          "Audio"
        ],
        "summary": "k.market.audio.Tts_Post(\"hello\")",
        "parameters": [
          {
            "name": "text",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/service/Audio/Asr": {
      "post": {
        "tags": [
          "Audio"
        ],
        "summary": "var file = k.file.readBinary(\"Asr.pcm\");\r\nvar params={dev_pid:1537,base64:file,format:\"pcm\",rate:8000}\r\nvar result = k.market.audio.Asr (params)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AsrReqDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AsrReqDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AsrReqDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AsrResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsrResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsrResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Baidu/SiteSubmit": {
      "post": {
        "tags": [
          "Baidu"
        ],
        "summary": "k.market.baidu.SiteSubmit(\"url\",\"token\",[\"http://example.com\"])",
        "parameters": [
          {
            "name": "siteUrl",
            "in": "query",
            "description": "主网站URL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "baiduToken",
            "in": "query",
            "description": "百度站长的Token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "urladdress",
            "in": "query",
            "description": "需要提交的网址",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BaiduSubmitResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaiduSubmitResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaiduSubmitResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/ChatGPT/chat_turbo": {
      "post": {
        "tags": [
          "ChatGPT"
        ],
        "summary": "var messages=[{\"role\": \"system\", \"content\": \"You are a helpful assistant.\"},\r\n{\"role\": \"user\", \"content\": \"Who won the world series in 2020?\"},\r\n{\"role\": \"assistant\", \"content\": \"The Los Angeles Dodgers won the World Series in 2020.\"},\r\n{ \"role\": \"user\", \"content\": \"Where was it played?\"}]\r\nvar params={n:1,max_token:200,temperature:0,apiKey:\"apikey\",messages:messages}\r\nk.market.chatgpt.chat_Turbo(params)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_TurboReqDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_TurboReqDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_TurboReqDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_TurboResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_TurboResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_TurboResDTO"
                }
              }
            }
          }
        },
        "servers": [
          {
            "description": "Global"
          }
        ]
      }
    },
    "/service/ChatGPT/chat_turbo_2": {
      "post": {
        "tags": [
          "ChatGPT",
          "Overload"
        ],
        "summary": "var res=k.market.chatgpt.chat_Turbo([{content:\"What is artificial intelligence\",role:\"user\"}])\r\nk.response.json(res)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_Turbo_Basics"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_Turbo_Basics"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_Turbo_Basics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_TurboResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_TurboResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_TurboResDTO"
                }
              }
            }
          }
        },
        "servers": [
          {
            "description": "Global"
          }
        ]
      }
    },
    "/service/ChatGPT/chat": {
      "post": {
        "tags": [
          "ChatGPT"
        ],
        "summary": "var res=k.market.chatgpt.chat(\"What is artificial intelligence\")\r\nk.response.json(res)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatGPTBasics"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatGPTBasics"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChatGPTBasics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_TurboResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_TurboResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_TurboResDTO"
                }
              }
            }
          }
        },
        "servers": [
          {
            "description": "Global"
          }
        ]
      }
    },
    "/service/ChatGPT/image_generate": {
      "post": {
        "tags": [
          "ChatGPT"
        ],
        "summary": "var params={prompt:\"a cute cat\",size:\"1024x1024\",response_format:\"url\",n:2,apiKey:apikey}\r\nvar res = k.market.chatgpt.image_generate (params)\r\nk.response.json(res.data[0].url)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerationImageReqDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerationImageReqDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerationImageReqDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              }
            }
          }
        },
        "servers": [
          {
            "description": "Global"
          }
        ]
      }
    },
    "/service/ChatGPT/image_generate_2": {
      "post": {
        "tags": [
          "ChatGPT",
          "Overload"
        ],
        "summary": "var res = k.market.chatgpt.image_generate (\"a cute cat\")\r\nk.response.json(res.data[0].url)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerationImage_Basics"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerationImage_Basics"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerationImage_Basics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              }
            }
          }
        },
        "servers": [
          {
            "description": "Global"
          }
        ]
      }
    },
    "/service/ChatGPT/image_Edit": {
      "post": {
        "tags": [
          "ChatGPT"
        ],
        "summary": "var imagebyte= k.file.readBinary(\"strawberries.png\");   \r\nvar maskbyte = k.file.readBinary(\"strawberriesMask.png\");\r\nvar imagefile = k.security.toBase64(imagebyte);\r\nvar maskfile = k.security.toBase64(maskbyte);\r\nvar params={prompt:\"The strawberries are in the woods\",image:imagefile,mask:maskfile,n:1,response_format:\"url\",size:\"1024x1024\",apiKey:apiKey}\r\nvar res = k.market.chatgpt.image_Edit(params)\r\nk.response.json(res.data[0].url)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditImageReqDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditImageReqDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditImageReqDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              }
            }
          }
        },
        "servers": [
          {
            "description": "Global"
          }
        ]
      }
    },
    "/service/ChatGPT/image_Edit_2": {
      "post": {
        "tags": [
          "ChatGPT",
          "Overload"
        ],
        "summary": "var imagebyte = k.file.readBinary(\"strawberries.png\");\r\nvar imagefile = k.security.toBase64(imagebyte);\r\nvar res = k.market.chatgpt.image_Edit(imagefile, \"The strawberries are in the woods\")\r\nk.response.json(res.data[0].url)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditImageBasics"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditImageBasics"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditImageBasics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              }
            }
          }
        },
        "servers": [
          {
            "description": "Global"
          }
        ]
      }
    },
    "/service/ChatGPT/image_variation": {
      "post": {
        "tags": [
          "ChatGPT"
        ],
        "summary": "var imagebyte= k.file.readBinary(\"strawberries.png\");\r\nvar imagefile = k.security.toBase64(imagebyte);\r\nvar params={image:imagefile,n:1,response_format:\"url\",size:\"1024x1024\",apiKey:apiKey}\r\nvar res = k.market.chatgpt.image_variation (params)\r\nk.response.json(res.data[0].url)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VarationImageReqDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VarationImageReqDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VarationImageReqDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              }
            }
          }
        },
        "servers": [
          {
            "description": "Global"
          }
        ]
      }
    },
    "/service/ChatGPT/image_variation_2": {
      "post": {
        "tags": [
          "ChatGPT",
          "Overload"
        ],
        "summary": "var byte=k.file.readBinary(\"strawberries.png\")\r\nvar file = k.security.toBase64(byte)\r\nvar result = k.market.chatgpt.image_variation(file)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VarationImageBasics"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VarationImageBasics"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VarationImageBasics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResDTO"
                }
              }
            }
          }
        },
        "servers": [
          {
            "description": "Global"
          }
        ]
      }
    },
    "/service/ChatGPT/transcriptions": {
      "post": {
        "tags": [
          "ChatGPT"
        ],
        "summary": "var file=k.file.readBinary(\"test.mp3\")\r\nvar audiofile = k.security.toBase64(file);\r\nvar params={file:audiofile,apikey:\"apikey\",fileType:\"mp3\",temperature:0,language:\"language\",response_format:\"json\",prompt:\"prompt\"}\r\nvar res = k.market.chatgpt.transcriptions (params)\r\nk.response.json(res)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_Transcription"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_Transcription"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_Transcription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_AudioResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_AudioResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_AudioResDTO"
                }
              }
            }
          }
        },
        "servers": [
          {
            "description": "Global"
          }
        ]
      }
    },
    "/service/ChatGPT/transcriptions_2": {
      "post": {
        "tags": [
          "ChatGPT",
          "Overload"
        ],
        "summary": "var file=k.file.readBinary(\"test.mp3\")\r\nvar audiofile = k.security.toBase64(file);\r\nvar res = k.market.chatgpt.transcriptions(audiofile, \"mp3\")",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_AudioReqBasics"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_AudioReqBasics"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_AudioReqBasics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_AudioResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_AudioResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_AudioResDTO"
                }
              }
            }
          }
        },
        "servers": [
          {
            "description": "Global"
          }
        ]
      }
    },
    "/service/ChatGPT/translates": {
      "post": {
        "tags": [
          "ChatGPT"
        ],
        "summary": "var file=k.file.readBinary(\"test.mp3\")\r\nvar audiofile = k.security.toBase64(file);\r\nvar params={file:audiofile,apikey:\"apikey\",fileType:\"mp3\",temperature:0,response_format:\"json\",prompt:\"prompt\"}\r\nvar res = k.market.chatgpt.translates (params)\r\nk.response.json(res)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_AudioReqDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_AudioReqDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_AudioReqDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_AudioResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_AudioResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_AudioResDTO"
                }
              }
            }
          }
        },
        "servers": [
          {
            "description": "Global"
          }
        ]
      }
    },
    "/service/ChatGPT/translates_2": {
      "post": {
        "tags": [
          "ChatGPT",
          "Overload"
        ],
        "summary": "var file=k.file.readBinary(\"test.mp3\")\r\nvar audiofile = k.security.toBase64(file);\r\nvar res= k.market.chatgpt.Translates(audiofile,\"mp3\")\r\nk.response.json(res)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_AudioReqBasics"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_AudioReqBasics"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenAI_RequestDTO_AudioReqBasics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_AudioResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_AudioResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenAI_ResponseDTO_AudioResDTO"
                }
              }
            }
          }
        },
        "servers": [
          {
            "description": "Global"
          }
        ]
      }
    },
    "/Admin/Client/{id}": {
      "get": {
        "tags": [
          "Client"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        }
      }
    },
    "/Admin/Client/ChangeState": {
      "post": {
        "tags": [
          "Client"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Controllers_ClientController_ChangeStateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Controllers_ClientController_ChangeStateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Controllers_ClientController_ChangeStateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        }
      }
    },
    "/Admin/Client/Billing": {
      "get": {
        "tags": [
          "Client"
        ],
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientBilling_Response"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientBilling_Response"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientBilling_Response"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service/ContentApproval/ImageFilter": {
      "post": {
        "tags": [
          "ContentApproval"
        ],
        "summary": "var bytes= k.file.readBinary(\"sex.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ContentApproval.ImageFilter(image);",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageApprovalReqDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageApprovalReqDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageApprovalReqDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageContentApprovalResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageContentApprovalResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageContentApprovalResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/ContentApproval/TextFilter": {
      "post": {
        "tags": [
          "ContentApproval"
        ],
        "summary": "var text = \"check text\"\r\nk.market.contentapproval.TextFilter(text,\"false\")",
        "parameters": [
          {
            "name": "txt",
            "in": "query",
            "description": "Need to check text",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipBidi",
            "in": "query",
            "description": "Whether to skip the bidi keyword character, default to the default, optional true, false",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TextContentApprovalResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextContentApprovalResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextContentApprovalResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/Admin/Currency/list": {
      "post": {
        "tags": [
          "Currency"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/Admin/Currency/transform": {
      "post": {
        "tags": [
          "Currency"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "money",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Controllers_CurrencyController_TransformResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Controllers_CurrencyController_TransformResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Controllers_CurrencyController_TransformResult"
                }
              }
            }
          }
        }
      }
    },
    "/service/Face/AddUser": {
      "post": {
        "tags": [
          "Face"
        ],
        "summary": "var bytes= k.file.readBinary(\"face.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar params={image:image,user_id:\"test01\",user_info:\"user_info\"}\r\nvar result = k.market.face.AddUser(params);",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaceAddOrUpdateReqDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FaceAddOrUpdateReqDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FaceAddOrUpdateReqDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FaceAddResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceAddResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceAddResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Face/UpdateUser": {
      "post": {
        "tags": [
          "Face"
        ],
        "summary": "var bytes= k.file.readBinary(\"face.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar params={image:image,user_id:\"test01\",user_info:\"user_info\"}\r\nvar result = k.market.face.UpdateUser(params);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaceAddOrUpdateReqDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FaceAddOrUpdateReqDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FaceAddOrUpdateReqDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FaceUpdateResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceUpdateResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceUpdateResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Face/DeleteFace": {
      "post": {
        "tags": [
          "Face"
        ],
        "summary": "k.market.face.DeleteFace(\"userid\",\"facetoken\")",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "faceToken",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FaceBaseResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceBaseResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceBaseResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Face/GetUser": {
      "post": {
        "tags": [
          "Face"
        ],
        "summary": ":\r\n            k.market.face.GetUser(\"test01\")",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FaceGetUserResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceGetUserResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceGetUserResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Face/GetFaces": {
      "post": {
        "tags": [
          "Face"
        ],
        "summary": "k.market.face.GetFaces(\"test01\")",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FaceGetListResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceGetListResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceGetListResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Face/GetUsers": {
      "post": {
        "tags": [
          "Face"
        ],
        "summary": "k.market.face.GetUsers(1,10)",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "length",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GroupGetUsersResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupGetUsersResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupGetUsersResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Face/DeleteUser": {
      "post": {
        "tags": [
          "Face"
        ],
        "summary": "k.market.face.DeleteUser(\"test01\")",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FaceBaseResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceBaseResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceBaseResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Face/FaceSearch": {
      "post": {
        "tags": [
          "Face"
        ],
        "summary": "var file=k.security.toBase64(k.file.readBinary(\"face.jpg\"))\r\nvar params={image:file,user_id:\"test01\",max_user_num:10}\r\nk.market.face.FaceSearch_Post(params)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaceSrearchReqDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FaceSrearchReqDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FaceSrearchReqDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FaceSearchResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceSearchResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceSearchResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/ImageClassify/Animal": {
      "post": {
        "tags": [
          "ImageClassify"
        ],
        "summary": "var bytes= k.file.readBinary(\"Animal.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ImageClassify.Animal(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageClassify_ImageClassifyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageClassify_ImageClassifyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageClassify_ImageClassifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AnimalResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnimalResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnimalResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/ImageClassify/Plant": {
      "post": {
        "tags": [
          "ImageClassify"
        ],
        "summary": "var bytes= k.file.readBinary(\"Plant.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ImageClassify.Plant(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageClassify_ImageClassifyRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageClassify_ImageClassifyRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImageClassify_ImageClassifyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlantResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlantResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlantResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/InboxPreview/GetDevices": {
      "post": {
        "tags": [
          "InboxPreview"
        ],
        "summary": "var devicesList=k.market.inboxpreview.GetDevices();",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Kooboo_Sites_EmailMarketing_InboxPreview_PreviewClient"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Kooboo_Sites_EmailMarketing_InboxPreview_PreviewClient"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Kooboo_Sites_EmailMarketing_InboxPreview_PreviewClient"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service/InboxPreview/CreateTask": {
      "post": {
        "tags": [
          "InboxPreview"
        ],
        "summary": "var id=k.market.inboxpreview.CreateTask(\"test\",\"<div>test body</div>\")\r\nvar result=k.market.inboxpreview.GetTask(id)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Kooboo_Sites_EmailMarketing_InboxPreview_CreateInboxPreviewDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Kooboo_Sites_EmailMarketing_InboxPreview_CreateInboxPreviewDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Kooboo_Sites_EmailMarketing_InboxPreview_CreateInboxPreviewDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/service/InboxPreview/GetTask": {
      "post": {
        "tags": [
          "InboxPreview"
        ],
        "summary": "var id=k.market.inboxpreview.CreateTask(\"test\",\"<div>test body</div>\")\r\nvar result=k.market.inboxpreview.GetTask(id)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Kooboo_Sites_EmailMarketing_InboxPreview_GetInboxPreviewResultDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Kooboo_Sites_EmailMarketing_InboxPreview_GetInboxPreviewResultDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Kooboo_Sites_EmailMarketing_InboxPreview_GetInboxPreviewResultDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Kooboo_Sites_EmailMarketing_InboxPreview_RenderClientResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Kooboo_Sites_EmailMarketing_InboxPreview_RenderClientResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Kooboo_Sites_EmailMarketing_InboxPreview_RenderClientResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Admin/InvokeRecord/Query": {
      "get": {
        "tags": [
          "InvokeRecord"
        ],
        "parameters": [
          {
            "name": "ClientId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientInvokeRecord_Response"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientInvokeRecord_Response"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientInvokeRecord_Response"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Admin/InvokeRecord/Services": {
      "get": {
        "tags": [
          "InvokeRecord"
        ],
        "summary": "Get all market service for account service provide price info",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Controllers_InvokeRecordController_Endpoint"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Controllers_InvokeRecordController_Endpoint"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Controllers_InvokeRecordController_Endpoint"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/BankCard": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"BankCard.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.BankCard(image)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BankCardResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankCardResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankCardResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/AirTicket": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"Airticket.png\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.AirTicket(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AirTicketResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirTicketResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AirTicketResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/CovidTest": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"CovidTest.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.CovidTest(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CovidTestAnalysisResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CovidTestAnalysisResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CovidTestAnalysisResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/BusinessLicense": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"BusinessLicense.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.BusinessLicense(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessLicenseResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessLicenseResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessLicenseResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/GeneralBill": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"GeneralBill.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.GeneralBill(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralBillResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralBillResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralBillResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/GeneralInvoice": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"GeneralInvoice.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.GeneralInvoice(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralInvoiceResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralInvoiceResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneralInvoiceResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/Handwriting": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"Handwriting.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.Handwriting(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HandwritingResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HandwritingResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HandwritingResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/HealthCode": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"HealthCode.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.HealthCode(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCodeResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCodeResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCodeResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/IdCardFront": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"IdCardFront.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.IdCardFront(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IdCardFrontResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdCardFrontResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdCardFrontResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/IdCardBack": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"IdCardBack.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.IdCardBack(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IdCardBackResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdCardBackResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdCardBackResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/ImageAccurate": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"ImageAccurate.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.ImageAccurate(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageAccurateResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageAccurateResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageAccurateResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/ImageAnalysis": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"ImageAnalysis.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.ImageAnalysis(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageAnalysisResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageAnalysisResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageAnalysisResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/Number": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"Number.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.Number(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NumberResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/OnlineTaxi": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"OnlineTaxi.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.OnlineTaxi(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineTaxiResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineTaxiResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnlineTaxiResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/QrCode": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"Qrcode.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.Qrcode(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/QrcodeResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrcodeResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrcodeResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/QuotaInvoice": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"QuotaInvoice.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.QuotaInvoice(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/QuotaInvoiceResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuotaInvoiceResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuotaInvoiceResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/Seal": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"Seal.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.Seal(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SealResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SealResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SealResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/TaxiInvoice": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"TaxiInvoice.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.TaxiInvoice(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaxiInvoiceResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxiInvoiceResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxiInvoiceResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/TrainTicket": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"TrainTicket.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.TrainTicket(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TrainTicketResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainTicketResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainTicketResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/VATInvoice": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"VATInvoice.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.VATInvoice(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VATInvoiceResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VATInvoiceResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VATInvoiceResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Ocr/Waybill": {
      "post": {
        "tags": [
          "Ocr"
        ],
        "summary": "var bytes= k.file.readBinary(\"Waybill.jpg\")\r\nvar image= k.security.toBase64(bytes)\r\nvar result = k.market.ocr.Waybill(image);",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Ocr_OcrRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WaybillResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaybillResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaybillResDTO"
                }
              }
            }
          }
        }
      }
    },
    "/service/Spamassassin/check": {
      "post": {
        "tags": [
          "Spamassassin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SpamScoreResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpamScoreResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpamScoreResult"
                }
              }
            }
          }
        }
      }
    },
    "/service/Spamassassin/dump": {
      "post": {
        "tags": [
          "Spamassassin"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/service/Spamassassin/ping": {
      "post": {
        "tags": [
          "Spamassassin"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResult"
                }
              }
            }
          }
        }
      }
    },
    "/service/Spamassassin/process": {
      "post": {
        "tags": [
          "Spamassassin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SpamScoreResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpamScoreResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpamScoreResult"
                }
              }
            }
          }
        }
      }
    },
    "/service/Spamassassin/report": {
      "post": {
        "tags": [
          "Spamassassin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SpamScoreResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpamScoreResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpamScoreResult"
                }
              }
            }
          }
        }
      }
    },
    "/service/Spamassassin/report-if-spam": {
      "post": {
        "tags": [
          "Spamassassin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportIfSpamResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportIfSpamResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportIfSpamResult"
                }
              }
            }
          }
        }
      }
    },
    "/service/Spamassassin/symbols": {
      "post": {
        "tags": [
          "Spamassassin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CommandModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SpamScoreResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpamScoreResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpamScoreResult"
                }
              }
            }
          }
        }
      }
    },
    "/service/Spamassassin/tell": {
      "post": {
        "tags": [
          "Spamassassin"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TellCommandModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TellCommandModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TellCommandModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResult"
                }
              }
            }
          }
        }
      }
    },
    "/service/Translation/TextTranslate": {
      "post": {
        "tags": [
          "Translation"
        ],
        "summary": "var text = \"这是一个中文\"\r\nvar result=k.market.translation.TextTranslate(\"zh\",\"en\",text)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Translation_TextRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Translation_TextRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Translation_TextRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TestTranslateResDTo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestTranslateResDTo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestTranslateResDTo"
                }
              }
            }
          }
        }
      }
    },
    "/service/Translation/GoogleTextTranslate": {
      "post": {
        "tags": [
          "Translation"
        ],
        "summary": "var text = \"这是一个中文\"\r\nvar result=k.market.translation.TextTranslate(\"zh\",\"en\",text)",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Translation_TextRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Translation_TextRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Translation_TextRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "servers": [
          {
            "description": "Global"
          }
        ]
      }
    },
    "/service/Translation/ImageTranslate": {
      "post": {
        "tags": [
          "Translation"
        ],
        "summary": "var byte=k.file.readBinary(\"Image.jpeg\")\r\nvar file=k.security.toBase64(byte)\r\nvar result = k.market.translation.ImageTranslation_Post(file,\"zh\",\"en\")",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Translation_ImageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Translation_ImageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Translation_ImageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ImageTranslateResDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageTranslateResDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageTranslateResDTO"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AirTicketResDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "唯一的log id，用于问题定位",
            "format": "int64"
          },
          "words_result": {
            "$ref": "#/components/schemas/AirTicketWords_result"
          },
          "words_result_num": {
            "type": "integer",
            "description": "识别结果数",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AirTicketWords_result": {
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "description": "座位等级",
            "nullable": true
          },
          "agent_code": {
            "type": "string",
            "description": "销售单位号",
            "nullable": true
          },
          "allow": {
            "type": "string",
            "description": "免费行李",
            "nullable": true
          },
          "carrier": {
            "type": "string",
            "description": "承运人",
            "nullable": true
          },
          "ck": {
            "type": "string",
            "description": "验证码",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "destination_station": {
            "type": "string",
            "description": "目的站",
            "nullable": true
          },
          "dev_fund": {
            "type": "string",
            "description": "民航发展基金/基建费",
            "nullable": true
          },
          "endorsement": {
            "type": "string",
            "description": "签注",
            "nullable": true
          },
          "fare": {
            "type": "string",
            "description": "票价",
            "nullable": true
          },
          "fare_basis": {
            "type": "string",
            "description": "客票级别",
            "nullable": true
          },
          "flight": {
            "type": "string",
            "description": "航班号",
            "nullable": true
          },
          "fuel_surcharge": {
            "type": "string",
            "description": "燃油附加费",
            "nullable": true
          },
          "id_num": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "insurance": {
            "type": "string",
            "description": "保险费",
            "nullable": true
          },
          "issued_by": {
            "type": "string",
            "description": "订票渠道",
            "nullable": true
          },
          "issued_date": {
            "type": "string",
            "description": "填开日期",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "郭达",
            "nullable": true
          },
          "other_tax": {
            "type": "string",
            "description": "其他税费",
            "nullable": true
          },
          "serial_number": {
            "type": "string",
            "description": "印刷序号",
            "nullable": true
          },
          "starting_station": {
            "type": "string",
            "description": "始发站",
            "nullable": true
          },
          "ticket_number": {
            "type": "string",
            "description": "电子客票号码",
            "nullable": true
          },
          "ticket_rates": {
            "type": "string",
            "description": "合计金额",
            "nullable": true
          },
          "time": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AnimalResDTO": {
        "type": "object",
        "properties": {
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/imageClass_ResultItem"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AsrReqDTO": {
        "type": "object",
        "properties": {
          "dev_pid": {
            "type": "integer",
            "description": "可选值:1537 -普通话(纯中文识别), 1737 - 英语 ,1637 -粤语,1837 -四川话, 1936 -普通话远场\t\r\n默认值：1537",
            "format": "int32",
            "nullable": true
          },
          "base64": {
            "type": "string",
            "description": "语音文件base64字符串",
            "nullable": true
          },
          "format": {
            "type": "string",
            "description": "语音文件格式，pcm 或者 wav 或者 amr。不区分大小写。推荐pcm文件",
            "nullable": true
          },
          "rate": {
            "type": "integer",
            "description": "采样率，16000、8000，固定值",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AsrResDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "corpus_no": {
            "type": "string",
            "nullable": true
          },
          "err_msg": {
            "type": "string",
            "nullable": true
          },
          "err_no": {
            "type": "integer",
            "format": "int32"
          },
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "sn": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaiduSubmitResDTO": {
        "type": "object",
        "properties": {
          "remain": {
            "type": "integer",
            "description": "今日剩余提交数量",
            "format": "int32"
          },
          "success": {
            "type": "integer",
            "description": "是否成功",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Baike_info": {
        "type": "object",
        "properties": {
          "baike_url": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BankCardResDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "Request ID, random number, unique.",
            "format": "int64"
          },
          "result": {
            "$ref": "#/components/schemas/BankCardResult"
          }
        },
        "additionalProperties": false
      },
      "BankCardResult": {
        "type": "object",
        "properties": {
          "bank_card_number": {
            "type": "string",
            "description": "6259 6508 9111\r\n银行卡卡号",
            "nullable": true
          },
          "bank_card_type": {
            "type": "integer",
            "description": "Type of bank card, 0: cannot identify; 1: debit card; 2. Credit Card\r\n银行卡类型，0:不能识别; 1: 借记卡; 2: 信用卡",
            "format": "int32"
          },
          "bank_name": {
            "type": "string",
            "description": "银行名",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BasicResult": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "contentLength": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BillWords_resultItem": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "probability": {
            "$ref": "#/components/schemas/Probability"
          },
          "chars": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Chars"
            },
            "nullable": true
          },
          "words": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BusinessLicenseResDTO": {
        "type": "object",
        "properties": {
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "words_result": {
            "$ref": "#/components/schemas/BusinessLicenseWords_result"
          },
          "words_result_num": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BusinessLicenseWords_result": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/WordsMessage"
          },
          "certificateNumber": {
            "$ref": "#/components/schemas/WordsMessage"
          },
          "companyName": {
            "$ref": "#/components/schemas/WordsMessage"
          },
          "legalPerson": {
            "$ref": "#/components/schemas/WordsMessage"
          },
          "socialCreditCode": {
            "$ref": "#/components/schemas/WordsMessage"
          },
          "validity": {
            "$ref": "#/components/schemas/WordsMessage"
          }
        },
        "additionalProperties": false
      },
      "Candidates": {
        "type": "object",
        "properties": {
          "prob": {
            "type": "number",
            "description": "",
            "format": "float"
          },
          "word": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Chars": {
        "type": "object",
        "properties": {
          "candidates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Candidates"
            },
            "description": "",
            "nullable": true
          },
          "char": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "additionalProperties": false
      },
      "ChatGPTBasics": {
        "required": [
          "prompt"
        ],
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "description": "You question"
          }
        },
        "additionalProperties": false
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "forbidden": {
            "type": "boolean",
            "readOnly": true
          },
          "forbiddenReason": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "lastActivity": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ClientBilling_Response": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "clientId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientInvokeRecord_Response": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "nullable": true
          },
          "methods": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "clientId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Codes_resultItem": {
        "type": "object",
        "properties": {
          "text": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommandModel": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContentItem": {
        "type": "object",
        "properties": {
          "dst": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "lineCount": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "pasteImg": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointsItem"
            },
            "description": "",
            "nullable": true
          },
          "rect": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "src": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Controllers_ClientController_ChangeStateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "forbidden": {
            "type": "boolean"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Controllers_CurrencyController_TransformResult": {
        "type": "object",
        "properties": {
          "money": {
            "type": "string",
            "nullable": true
          },
          "rate": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Controllers_InvokeRecordController_Endpoint": {
        "type": "object",
        "properties": {
          "service": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CovidTestAnalysisResDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "logId": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "name": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/message"
            },
            "description": "",
            "nullable": true
          },
          "testResult": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/message"
            },
            "description": "",
            "nullable": true
          },
          "testTime": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/message"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Data": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentItem"
            },
            "description": "",
            "nullable": true
          },
          "pasteImg": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "sumDst": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "sumSrc": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "to": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Detail": {
        "type": "object",
        "properties": {
          "riskLevel": {
            "type": "string",
            "nullable": true
          },
          "riskCode": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditImageBasics": {
        "required": [
          "image",
          "prompt"
        ],
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask."
          },
          "prompt": {
            "type": "string",
            "description": "A text description of the desired image(s). The maximum length is 1000 characters."
          }
        },
        "additionalProperties": false
      },
      "EditImageReqDTO": {
        "required": [
          "apikey",
          "image",
          "n",
          "prompt",
          "response_format",
          "size"
        ],
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask."
          },
          "prompt": {
            "type": "string",
            "description": "A text description of the desired image(s). The maximum length is 1000 characters."
          },
          "n": {
            "type": "integer",
            "description": "The number of images to generate. Must be between 1 and 10.",
            "format": "int32"
          },
          "size": {
            "type": "string",
            "description": "The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024."
          },
          "response_format": {
            "type": "string",
            "description": "The format in which the generated images are returned. Must be one of url or b64_json."
          },
          "apikey": {
            "type": "string",
            "description": "You OpenAi ApiKey"
          },
          "mask": {
            "type": "string",
            "description": "An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where image should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as image.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FaceAddOrUpdateReqDTO": {
        "required": [
          "image",
          "user_id",
          "user_info"
        ],
        "type": "object",
        "properties": {
          "quality_control": {
            "type": "string",
            "description": "可选值范围：NONE、LOW、NORMAL、HIGH\r\n默认值：NONE\r\n说明：图片质量控制 NONE: 不进行控制 LOW:较低的质量要求 NORMAL: 一般的质量要求 HIGH: 较高的质量要求",
            "nullable": true
          },
          "liveness_control": {
            "type": "string",
            "description": "可选值范围：NONE、LOW、NORMAL、HIGH\r\n默认值：NONE\r\n说明：活体检测控制 NONE: 不进行控制 LOW:较低的活体要求(高通过率 低攻击拒绝率) NORMAL: 一般的活体要求(平衡的攻击拒绝率, 通过率) HIGH: 较高的活体要求(高攻击拒绝率 低通过率)",
            "nullable": true
          },
          "image": {
            "type": "string",
            "description": "base64 image string"
          },
          "user_id": {
            "type": "string",
            "description": "User id"
          },
          "user_info": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "FaceAddResDTO": {
        "type": "object",
        "properties": {
          "error_code": {
            "type": "integer",
            "format": "int32"
          },
          "error_msg": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "cached": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "result": {
            "$ref": "#/components/schemas/FaceAddResult"
          },
          "timestamp": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FaceAddResult": {
        "type": "object",
        "properties": {
          "face_token": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "additionalProperties": false
      },
      "FaceBaseResDTO": {
        "type": "object",
        "properties": {
          "error_code": {
            "type": "integer",
            "format": "int32"
          },
          "error_msg": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "FaceGetListResDTO": {
        "type": "object",
        "properties": {
          "error_code": {
            "type": "integer",
            "format": "int32"
          },
          "error_msg": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "cached": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "result": {
            "$ref": "#/components/schemas/GetListRes_Result"
          },
          "timestamp": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "FaceGetUser_Result": {
        "type": "object",
        "properties": {
          "user_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User_listItem"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FaceGetUserResDTO": {
        "type": "object",
        "properties": {
          "error_code": {
            "type": "integer",
            "format": "int32"
          },
          "error_msg": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "cached": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "result": {
            "$ref": "#/components/schemas/FaceGetUser_Result"
          },
          "timestamp": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "FaceSearch_Result": {
        "type": "object",
        "properties": {
          "face_token": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "user_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User_list"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FaceSearchResDTO": {
        "type": "object",
        "properties": {
          "error_code": {
            "type": "integer",
            "format": "int32"
          },
          "error_msg": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "timestamp": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "cached": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "result": {
            "$ref": "#/components/schemas/FaceSearch_Result"
          }
        },
        "additionalProperties": false
      },
      "FaceSrearchReqDTO": {
        "required": [
          "image"
        ],
        "type": "object",
        "properties": {
          "quality_control": {
            "type": "string",
            "description": "可选值范围：NONE、LOW、NORMAL、HIGH\r\n默认值：NONE\r\n说明：图片质量控制 NONE: 不进行控制 LOW:较低的质量要求 NORMAL: 一般的质量要求 HIGH: 较高的质量要求",
            "nullable": true
          },
          "liveness_control": {
            "type": "string",
            "description": "可选值范围：NONE、LOW、NORMAL、HIGH\r\n默认值：NONE\r\n说明：活体检测控制 NONE: 不进行控制 LOW:较低的活体要求(高通过率 低攻击拒绝率) NORMAL: 一般的活体要求(平衡的攻击拒绝率, 通过率) HIGH: 较高的活体要求(高攻击拒绝率 低通过率)",
            "nullable": true
          },
          "image": {
            "type": "string",
            "description": "Base64 image string"
          },
          "match_threshold": {
            "type": "integer",
            "description": "Match threshold (After the threshold is set, information about users whose score is lower than the threshold is not returned.) Max. 100 Min. 0 Default 80",
            "format": "int32",
            "nullable": true
          },
          "max_user_num": {
            "type": "integer",
            "description": "The number of users returned after a lookup. Returns the users with the highest similarity. The default value is 1. A maximum of 50 users are returned.",
            "format": "int32",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "description": "To compare a specific user, specify user_id. Face authentication function.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FaceUpdate_Result": {
        "type": "object",
        "properties": {
          "face_token": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "additionalProperties": false
      },
      "FaceUpdateResDTO": {
        "type": "object",
        "properties": {
          "error_code": {
            "type": "integer",
            "format": "int32"
          },
          "error_msg": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "cached": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "result": {
            "$ref": "#/components/schemas/FaceUpdate_Result"
          },
          "timestamp": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "GeneralBillResDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "direction": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "words_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillWords_resultItem"
            },
            "description": "",
            "nullable": true
          },
          "words_result_num": {
            "type": "integer",
            "description": "识别结果数，表示words_result的元素个数",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GeneralInvoiceResDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "direction": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "words_result": {
            "$ref": "#/components/schemas/GeneralInvoiceWords_result"
          },
          "words_result_num": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GeneralInvoiceWords_result": {
        "type": "object",
        "properties": {
          "amountInFiguers": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "amountInWords": {
            "type": "string",
            "description": "贰佰伍拾元整",
            "nullable": true
          },
          "checkCode": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "苏州",
            "nullable": true
          },
          "commodityAmount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowWord"
            },
            "description": "",
            "nullable": true
          },
          "commodityName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowWord"
            },
            "description": "",
            "nullable": true
          },
          "commodityNum": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowWord"
            },
            "description": "",
            "nullable": true
          },
          "commodityPrice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowWord"
            },
            "description": "",
            "nullable": true
          },
          "commodityUnit": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "industrySort": {
            "type": "string",
            "description": "其他服务",
            "nullable": true
          },
          "invoiceCode": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "description": "2017年08月02日",
            "nullable": true
          },
          "invoiceNum": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "invoiceType": {
            "type": "string",
            "description": "江苏省苏州市国家税务局通用机打发票",
            "nullable": true
          },
          "machineNum": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "province": {
            "type": "string",
            "description": "江苏",
            "nullable": true
          },
          "purchaserName": {
            "type": "string",
            "description": "深圳商集企业服务有限公司",
            "nullable": true
          },
          "purchaserRegisterNum": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "sellerName": {
            "type": "string",
            "description": "苏州安顺企业服务有限公司",
            "nullable": true
          },
          "sellerRegisterNum": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "sheetNum": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "time": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "totalTax": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerationImage_Basics": {
        "required": [
          "prompt"
        ],
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "description": "A text description of the desired image(s). The maximum length is 1000 characters."
          }
        },
        "additionalProperties": false
      },
      "GenerationImageReqDTO": {
        "required": [
          "apikey",
          "n",
          "prompt",
          "response_format",
          "size"
        ],
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "description": "A text description of the desired image(s). The maximum length is 1000 characters."
          },
          "n": {
            "type": "integer",
            "description": "The number of images to generate. Must be between 1 and 10.",
            "format": "int32"
          },
          "size": {
            "type": "string",
            "description": "The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024."
          },
          "response_format": {
            "type": "string",
            "description": "The format in which the generated images are returned. Must be one of url or b64_json."
          },
          "apikey": {
            "type": "string",
            "description": "You OpenAi ApiKey"
          }
        },
        "additionalProperties": false
      },
      "GetListRes_Face_listItem": {
        "type": "object",
        "properties": {
          "ctime": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "face_token": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetListRes_Result": {
        "type": "object",
        "properties": {
          "face_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetListRes_Face_listItem"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupGetUsers_Result": {
        "type": "object",
        "properties": {
          "user_id_list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GroupGetUsersResDTO": {
        "type": "object",
        "properties": {
          "error_code": {
            "type": "integer",
            "format": "int32"
          },
          "error_msg": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "cached": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "result": {
            "$ref": "#/components/schemas/GroupGetUsers_Result"
          },
          "timestamp": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "HandwritingResDTO": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "words_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HandwritingWords_resultItem"
            },
            "description": "",
            "nullable": true
          },
          "words_result_num": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HandwritingWords_resultItem": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "chars": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Chars"
            },
            "nullable": true
          },
          "probability": {
            "$ref": "#/components/schemas/Probability"
          },
          "words": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HealthCodeResDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "idCar": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/message"
            },
            "description": "",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "name": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/message"
            },
            "description": "",
            "nullable": true
          },
          "state": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/message"
            },
            "description": "",
            "nullable": true
          },
          "testResult": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/message"
            },
            "description": "",
            "nullable": true
          },
          "testTime": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/message"
            },
            "description": "",
            "nullable": true
          },
          "testTimeInterval": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/message"
            },
            "description": "",
            "nullable": true
          },
          "updateTime": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/message"
            },
            "description": "",
            "nullable": true
          },
          "vaccine": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/message"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdCardBackResDTO": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "integer",
            "format": "int32"
          },
          "risk_type": {
            "type": "string",
            "nullable": true
          },
          "words_result_num": {
            "type": "integer",
            "format": "int32"
          },
          "idcard_number_type": {
            "type": "integer",
            "format": "int32"
          },
          "image_status": {
            "type": "string",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "format": "int64"
          },
          "words_result": {
            "$ref": "#/components/schemas/IdCardBackWords_Result"
          }
        },
        "additionalProperties": false
      },
      "IdCardBackWords_Result": {
        "type": "object",
        "properties": {
          "expiryDate": {
            "$ref": "#/components/schemas/WordsMessage"
          },
          "issuingAuthority": {
            "$ref": "#/components/schemas/WordsMessage"
          },
          "issuingDate": {
            "$ref": "#/components/schemas/WordsMessage"
          }
        },
        "additionalProperties": false
      },
      "IdCardFrontResDTO": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "integer",
            "format": "int32"
          },
          "risk_type": {
            "type": "string",
            "nullable": true
          },
          "words_result_num": {
            "type": "integer",
            "format": "int32"
          },
          "idcard_number_type": {
            "type": "integer",
            "format": "int32"
          },
          "image_status": {
            "type": "string",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "format": "int64"
          },
          "words_result": {
            "$ref": "#/components/schemas/IdCardFrontWords_Result"
          }
        },
        "additionalProperties": false
      },
      "IdCardFrontWords_Result": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/WordsMessage"
          },
          "nation": {
            "$ref": "#/components/schemas/WordsMessage"
          },
          "addres": {
            "$ref": "#/components/schemas/WordsMessage"
          },
          "idnumber": {
            "$ref": "#/components/schemas/WordsMessage"
          },
          "birth": {
            "$ref": "#/components/schemas/WordsMessage"
          },
          "sex": {
            "$ref": "#/components/schemas/WordsMessage"
          }
        },
        "additionalProperties": false
      },
      "Image_info": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageAccurateResDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "direction": {
            "type": "integer",
            "format": "int32"
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "words_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageAccurateWords_resultItem"
            },
            "description": "",
            "nullable": true
          },
          "words_result_num": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ImageAccurateWords_resultItem": {
        "type": "object",
        "properties": {
          "words": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageAnalysisResDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "direction": {
            "type": "integer",
            "format": "int32"
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "words_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageAccurateWords_resultItem"
            },
            "description": "",
            "nullable": true
          },
          "words_result_num": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "language": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ImageApprovalReqDTO": {
        "required": [
          "image"
        ],
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "need check image",
            "format": "byte"
          }
        },
        "additionalProperties": false
      },
      "imageClass_ResultItem": {
        "type": "object",
        "properties": {
          "baike_info": {
            "$ref": "#/components/schemas/Baike_info"
          },
          "name": {
            "type": "string",
            "description": "叉角羚",
            "nullable": true
          },
          "score": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageClassify_ImageClassifyRequest": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Base64 image string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageContentApprovalResDTO": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "成功返回 0",
            "format": "int32"
          },
          "unsafe": {
            "type": "number",
            "description": "可能性",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "ImageDatum": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageResDTO": {
        "type": "object",
        "properties": {
          "created": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageDatum"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImageTranslateResDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "error_code": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "error_msg": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/Data"
          }
        },
        "additionalProperties": false
      },
      "ItemsItem": {
        "type": "object",
        "properties": {
          "carType": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "destinationPlace": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "distance": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "fare": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "itemId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "pickupDate": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "pickupTime": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "startPlace": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Kooboo_Sites_EmailMarketing_InboxPreview_CreateInboxPreviewDTO": {
        "required": [
          "html",
          "subject"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "Mail Subject"
          },
          "html": {
            "type": "string",
            "description": "mail body"
          },
          "deviceIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "['aolw10_chr26_win']",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Kooboo_Sites_EmailMarketing_InboxPreview_GetInboxPreviewResultDTO": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Get from k.market.inboxpreview.CreateTask"
          }
        },
        "additionalProperties": false
      },
      "Kooboo_Sites_EmailMarketing_InboxPreview_PreviewClient": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "client": {
            "type": "string",
            "nullable": true
          },
          "os": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "rotate": {
            "type": "boolean"
          },
          "default": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Kooboo_Sites_EmailMarketing_InboxPreview_RenderClientResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "client": {
            "type": "string",
            "nullable": true
          },
          "os": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "screenshots": {
            "$ref": "#/components/schemas/Kooboo_Sites_EmailMarketing_InboxPreview_Screenshots"
          },
          "thumbnail": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "isCompleted": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Kooboo_Sites_EmailMarketing_InboxPreview_Screenshots": {
        "type": "object",
        "properties": {
          "default": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Location": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "left": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "top": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Major": {
        "type": "object",
        "properties": {
          "probability": {
            "type": "number",
            "description": "",
            "format": "double"
          },
          "words": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "message": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "word": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NumberResDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "words_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NumberWords_resultItem"
            },
            "description": "",
            "nullable": true
          },
          "words_result_num": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "NumberWords_resultItem": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "words": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ocr_OcrRequest": {
        "required": [
          "image"
        ],
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Base64 image string"
          }
        },
        "additionalProperties": false
      },
      "OnlineTaxiResDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "words_result": {
            "$ref": "#/components/schemas/OnlineTaxiWords_result"
          },
          "words_result_num": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "OnlineTaxiWords_result": {
        "type": "object",
        "properties": {
          "applicationDate": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "itemNum": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemsItem"
            },
            "description": "",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "serviceProvider": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "totalFare": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpenAI_RequestDTO_AudioReqBasics": {
        "required": [
          "file",
          "fileType"
        ],
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "The audio file to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm."
          },
          "fileType": {
            "type": "string",
            "description": "The audio file to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm."
          }
        },
        "additionalProperties": false
      },
      "OpenAI_RequestDTO_AudioReqDTO": {
        "required": [
          "apikey",
          "file",
          "fileType"
        ],
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "The audio file to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm."
          },
          "fileType": {
            "type": "string",
            "description": "The audio file to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm."
          },
          "apikey": {
            "type": "string",
            "description": "you apikey"
          },
          "prompt": {
            "type": "string",
            "description": "An optional text to guide the model's style or continue a previous audio segment. The prompt should match the audio language.",
            "nullable": true
          },
          "response_format": {
            "type": "string",
            "description": "The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.",
            "nullable": true
          },
          "temperature": {
            "type": "integer",
            "description": "What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OpenAI_RequestDTO_Message": {
        "required": [
          "content",
          "role"
        ],
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OpenAI_RequestDTO_Transcription": {
        "required": [
          "apikey",
          "file",
          "fileType"
        ],
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "The audio file to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm."
          },
          "fileType": {
            "type": "string",
            "description": "The audio file to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm."
          },
          "apikey": {
            "type": "string",
            "description": "you apikey"
          },
          "prompt": {
            "type": "string",
            "description": "An optional text to guide the model's style or continue a previous audio segment. The prompt should match the audio language.",
            "nullable": true
          },
          "response_format": {
            "type": "string",
            "description": "The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.",
            "nullable": true
          },
          "temperature": {
            "type": "integer",
            "description": "What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.",
            "format": "int32"
          },
          "language": {
            "type": "string",
            "description": "The language of the input audio. Supplying the input language in ISO-639-1 format will improve accuracy and latency",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpenAI_RequestDTO_Turbo_Basics": {
        "required": [
          "messages"
        ],
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAI_RequestDTO_Message"
            },
            "description": "The messages to generate chat completions"
          }
        },
        "additionalProperties": false
      },
      "OpenAI_RequestDTO_TurboReqDTO": {
        "required": [
          "apikey",
          "messages"
        ],
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAI_RequestDTO_Message"
            },
            "description": "The messages to generate chat completions"
          },
          "apikey": {
            "type": "string",
            "description": "you apikey"
          },
          "temperature": {
            "type": "number",
            "description": "What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.",
            "format": "double"
          },
          "n": {
            "type": "integer",
            "description": "How many chat completion choices to generate for each input message.",
            "format": "int32"
          },
          "max_token": {
            "type": "integer",
            "description": "The maximum number of tokens allowed for the generated answer. By default, the number of tokens the model can return will be (4096 - prompt tokens).",
            "format": "int32"
          },
          "top_p": {
            "type": "number",
            "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.",
            "format": "double"
          },
          "model": {
            "type": "string",
            "description": "gpt-4 and dated model releases, gpt-4-turbo-preview and dated model releases, gpt-4-vision-preview, gpt-4-32k and dated model releases, gpt-3.5-turbo and dated model releases, gpt-3.5-turbo-16k and dated model releases, fine-tuned versions of gpt-3.5-turbo",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpenAI_ResponseDTO_AudioResDTO": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpenAI_ResponseDTO_Choice": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/OpenAI_ResponseDTO_Message"
          },
          "finish_reason": {
            "type": "string",
            "nullable": true
          },
          "index": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OpenAI_ResponseDTO_Message": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpenAI_ResponseDTO_TurboResDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "_object": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "integer",
            "format": "int32"
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "usage": {
            "$ref": "#/components/schemas/OpenAI_ResponseDTO_Usage"
          },
          "choices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenAI_ResponseDTO_Choice"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpenAI_ResponseDTO_Usage": {
        "type": "object",
        "properties": {
          "prompt_tokens": {
            "type": "integer",
            "format": "int32"
          },
          "completion_tokens": {
            "type": "integer",
            "format": "int32"
          },
          "total_tokens": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PlantResDTO": {
        "type": "object",
        "properties": {
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/imageClass_ResultItem"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PointsItem": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Probability": {
        "type": "object",
        "properties": {
          "average": {
            "type": "number",
            "description": "",
            "format": "double"
          },
          "min": {
            "type": "number",
            "description": "",
            "format": "double"
          },
          "variance": {
            "type": "number",
            "description": "",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "QrcodeResDTO": {
        "type": "object",
        "properties": {
          "codes_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Codes_resultItem"
            },
            "description": "",
            "nullable": true
          },
          "codes_result_num": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "QuotaInvoiceResDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "words_result": {
            "$ref": "#/components/schemas/QuotalnvoiceWords_result"
          },
          "words_result_num": {
            "type": "integer",
            "description": "",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "QuotalnvoiceWords_result": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "invoice_code": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "invoice_number": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "invoice_rate": {
            "type": "string",
            "description": "壹佰元",
            "nullable": true
          },
          "invoice_rate_lowercase": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "location": {
            "type": "string",
            "description": "上海",
            "nullable": true
          },
          "province": {
            "type": "string",
            "description": "上海",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReportIfSpamResult": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "contentLength": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "spam": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "score": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Result": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "to": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "trans_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Trans_resultItem"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResultItem": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "major": {
            "$ref": "#/components/schemas/Major"
          },
          "minor": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "probability": {
            "type": "number",
            "description": "",
            "format": "double"
          },
          "type": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RowWord": {
        "type": "object",
        "properties": {
          "row": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "word": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SealResDTO": {
        "type": "object",
        "properties": {
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResultItem"
            },
            "description": "",
            "nullable": true
          },
          "result_num": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SpamassassinNet_DatabaseKind": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "SpamassassinNet_MessageClass": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "SpamScoreResult": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "code": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "contentLength": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "spam": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          },
          "score": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "criticalScore": {
            "type": "number",
            "format": "float",
            "readOnly": true
          },
          "currentScore": {
            "type": "number",
            "format": "float",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TaxiInvoiceResDTO": {
        "type": "object",
        "properties": {
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "words_result": {
            "$ref": "#/components/schemas/Words_result"
          },
          "words_result_num": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TellCommandModel": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "nullable": true
          },
          "messageClass": {
            "$ref": "#/components/schemas/SpamassassinNet_MessageClass"
          },
          "set": {
            "$ref": "#/components/schemas/SpamassassinNet_DatabaseKind"
          },
          "remove": {
            "$ref": "#/components/schemas/SpamassassinNet_DatabaseKind"
          }
        },
        "additionalProperties": false
      },
      "TestTranslateResDTo": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "result": {
            "$ref": "#/components/schemas/Result"
          }
        },
        "additionalProperties": false
      },
      "TextContentApprovalResDTO": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "riskLevel": {
            "type": "string",
            "nullable": true
          },
          "riskCode": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Detail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TrainTicketResDTO": {
        "type": "object",
        "properties": {
          "direction": {
            "type": "integer",
            "description": "",
            "format": "int32"
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "words_result": {
            "$ref": "#/components/schemas/TrainTicketWords_result"
          },
          "words_result_num": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TrainTicketWords_result": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "2019年04月03日",
            "nullable": true
          },
          "destination_station": {
            "type": "string",
            "description": "天津站",
            "nullable": true
          },
          "id_num": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "裴一丽",
            "nullable": true
          },
          "sales_station": {
            "type": "string",
            "description": "北京南",
            "nullable": true
          },
          "seat_category": {
            "type": "string",
            "description": "二等座",
            "nullable": true
          },
          "seat_num": {
            "type": "string",
            "description": "02车03C号",
            "nullable": true
          },
          "serial_number": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "starting_station": {
            "type": "string",
            "description": "北京南站",
            "nullable": true
          },
          "ticket_num": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "ticket_rates": {
            "type": "string",
            "description": "￥54.5元",
            "nullable": true
          },
          "time": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "train_num": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Trans_resultItem": {
        "type": "object",
        "properties": {
          "dst": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "src": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Translation_ImageRequest": {
        "required": [
          "image",
          "to"
        ],
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "base64  byte []",
            "format": "byte"
          },
          "from": {
            "type": "string",
            "description": "Translation source language",
            "nullable": true
          },
          "to": {
            "type": "string",
            "description": "Translation target language"
          }
        },
        "additionalProperties": false
      },
      "Translation_TextRequest": {
        "required": [
          "from",
          "text",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "Translation source language"
          },
          "to": {
            "type": "string",
            "description": "Translation target language"
          },
          "text": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "User_list": {
        "type": "object",
        "properties": {
          "group_id": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "user_id": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "user_info": {
            "type": "string",
            "description": "这是更新之后的备注",
            "nullable": true
          },
          "score": {
            "type": "number",
            "description": "",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "User_listItem": {
        "type": "object",
        "properties": {
          "group_id": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "user_info": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VarationImageBasics": {
        "required": [
          "image"
        ],
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask."
          }
        },
        "additionalProperties": false
      },
      "VarationImageReqDTO": {
        "required": [
          "apikey",
          "image",
          "n",
          "response_format",
          "size"
        ],
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask."
          },
          "n": {
            "type": "integer",
            "description": "The number of images to generate. Must be between 1 and 10.",
            "format": "int32"
          },
          "size": {
            "type": "string",
            "description": "The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024."
          },
          "response_format": {
            "type": "string",
            "description": "The format in which the generated images are returned. Must be one of url or b64_json."
          },
          "apikey": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "VATInvoiceResDTO": {
        "type": "object",
        "properties": {
          "log_id": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "words_result": {
            "$ref": "#/components/schemas/VATInvoiceWords_result"
          },
          "words_result_num": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "VATInvoiceWords_result": {
        "type": "object",
        "properties": {
          "agent": {
            "type": "string",
            "description": "否",
            "nullable": true
          },
          "amountInFiguers": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "amountInWords": {
            "type": "string",
            "description": "壹拾万圆整",
            "nullable": true
          },
          "checker": {
            "type": "string",
            "description": ":沈园园",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "commodityAmount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowWord"
            },
            "description": "",
            "nullable": true
          },
          "commodityName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowWord"
            },
            "description": "",
            "nullable": true
          },
          "commodityNum": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowWord"
            },
            "description": "",
            "nullable": true
          },
          "commodityPrice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowWord"
            },
            "description": "",
            "nullable": true
          },
          "commodityTax": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowWord"
            },
            "description": "",
            "nullable": true
          },
          "commodityTaxRate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowWord"
            },
            "description": "",
            "nullable": true
          },
          "commodityType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowWord"
            },
            "description": "",
            "nullable": true
          },
          "commodityUnit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowWord"
            },
            "description": "",
            "nullable": true
          },
          "invoiceCode": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "description": "2016年06月02日",
            "nullable": true
          },
          "invoiceNum": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "invoiceType": {
            "type": "string",
            "description": "专用发票",
            "nullable": true
          },
          "noteDrawer": {
            "type": "string",
            "description": "沈园园",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "payee": {
            "type": "string",
            "description": ":徐蓉",
            "nullable": true
          },
          "province": {
            "type": "string",
            "description": "上海",
            "nullable": true
          },
          "purchaserAddress": {
            "type": "string",
            "description": "北京市海淀区东北旺西路8号中关村软件园17号楼二属A2010-59108001",
            "nullable": true
          },
          "purchaserBank": {
            "type": "string",
            "description": "招商银行北京分行大屯路支行8661820285100030",
            "nullable": true
          },
          "purchaserName": {
            "type": "string",
            "description": "百度时代网络技术(北京)有限公司",
            "nullable": true
          },
          "purchaserRegisterNum": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "remarks": {
            "type": "string",
            "description": "告传",
            "nullable": true
          },
          "sellerAddress": {
            "type": "string",
            "description": ":嘉定区胜辛南路500号15幢1161室55033753",
            "nullable": true
          },
          "sellerBank": {
            "type": "string",
            "description": "中国银行南翔支行446863841354",
            "nullable": true
          },
          "sellerName": {
            "type": "string",
            "description": "上海易火广告传媒有限公司",
            "nullable": true
          },
          "sellerRegisterNum": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "sheetNum": {
            "type": "string",
            "description": "第三联",
            "nullable": true
          },
          "totalAmount": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "totalTax": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WaybillResDTO": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorMsg": {
            "type": "string",
            "nullable": true
          },
          "log_id": {
            "type": "integer",
            "description": "",
            "format": "int64"
          },
          "words_result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WaybillWords_resultItem"
            },
            "description": "",
            "nullable": true
          },
          "words_result_num": {
            "type": "integer",
            "description": "",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WaybillWords_resultItem": {
        "type": "object",
        "properties": {
          "bar_code": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordMessage"
            },
            "description": "",
            "nullable": true
          },
          "image_info": {
            "$ref": "#/components/schemas/Image_info"
          },
          "recipient_addr": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordMessage"
            },
            "description": "",
            "nullable": true
          },
          "recipient_name": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordMessage"
            },
            "description": "",
            "nullable": true
          },
          "recipient_phone": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordMessage"
            },
            "description": "",
            "nullable": true
          },
          "sender_addr": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordMessage"
            },
            "description": "",
            "nullable": true
          },
          "sender_name": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordMessage"
            },
            "description": "",
            "nullable": true
          },
          "sender_phone": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordMessage"
            },
            "description": "",
            "nullable": true
          },
          "three_segment_code": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordMessage"
            },
            "description": "",
            "nullable": true
          },
          "waybill_number": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordMessage"
            },
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WordMessage": {
        "type": "object",
        "properties": {
          "word": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Words_result": {
        "type": "object",
        "properties": {
          "callServiceSurcharge": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "distance": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "fare": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "fuelOilSurcharge": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "invoiceCode": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "invoiceNum": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "pricePerkm": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "province": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "taxiNum": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "time": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WordsMessage": {
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "words": {
            "type": "string",
            "description": "袁运筹",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "apiKey",
        "description": "\"Authorization: bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "bearer": [ ]
    }
  ]
}